/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.mobcent.discuz.base.fragment;

import com.mobcent.discuz.base.delegate.SlideDelegate;
import com.mobcent.discuz.android.model.ConfigModuleModel;
import android.view.View;
import com.mobcent.discuz.base.model.TopSettingModel;
import java.util.ArrayList;
import java.util.List;
import com.mobcent.discuz.base.model.TopBtnModel;
import com.mobcent.discuz.android.model.ConfigComponentModel;
import com.mobcent.discuz.base.delegate.SubTitleChangeListener;
import android.os.Bundle;
import java.io.Serializable;
import android.os.Handler;
import android.app.Activity;
import com.mobcent.discuz.base.helper.DZTCHelper;
import android.content.Context;

public abstract class BaseModuleFragment extends BaseFragment implements SlideDelegate {
    public String TAG;
    protected ConfigModuleModel moduleModel;
    private View.OnClickListener topClickListener;
    
    public BaseModuleFragment() {
        TAG = "BaseModuleFragment";
        topClickListener = new View.OnClickListener(this) {
            
            public void onClick(View v) {
                TopBtnModel topBtnModel = (TopBtnModel)v.getTag();
                if((topBtnModel.tag != null) && (topBtnModel.tag instanceof ConfigComponentModel)) {
                    ConfigComponentModel moduleModel = topBtnModel.tag;
                    ActivityDispatchHelper.dispatchActivity(activity, moduleModel);
                }
            }
        };
    }
    
    protected void initDatas(Bundle savedInstanceState) {
        super.initDatas(savedInstanceState);
        moduleModel = (ConfigModuleModel)getBundle().getSerializable("moduleModel");
        if(savedInstanceState != null) {
            ConfigModuleModel saveModuleModel = (ConfigModuleModel)savedInstanceState.getSerializable("moduleModel");
            if(saveModuleModel != null) {
                moduleModel = saveModuleModel;
            }
        }
    }
    
    protected void initViews(View rootView) {
        mHandler.postDelayed(new Runnable(this) {
            
            public void run() {
                if(!moduleModel.isComponent()) {
                    dealTopBar();
                }
            }
        }, 0x64);
    }
    
    public void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        outState.putSerializable("moduleModel", moduleModel);
    }
    
    public void onResume() {
        super.onResume();
        DZTCHelper.onPageStart(activity, "");
    }
    
    public void onPause() {
        super.onPause();
        DZTCHelper.onPageEnd(activity, "");
    }
    
    public void dealTopBar() {
        if(moduleModel != null) {
            TopSettingModel topSettingModel = createTopSettingModel();
            topSettingModel.title = moduleModel.getTitle();
            ArrayList<TopBtnModel> leftList = new ArrayList<TopBtnModel>();
            ArrayList<TopBtnModel> rightList = new ArrayList<TopBtnModel>();
            List<ConfigComponentModel> leftModels = moduleModel.getLeftTopbarList();
            if((leftModels != null) && (!leftModels.isEmpty())) {
                for(int i = 0x0; i < leftModels.size(); i = i + 0x1) {
                    ConfigComponentModel moduleModel = (ConfigComponentModel)leftModels.get(i);
                    TopBtnModel topBtnModel = new TopBtnModel();
                    topBtnModel.tag = moduleModel;
                    topBtnModel.icon = moduleModel.getIcon();
                    leftList.add(topBtnModel);
                }
            }
            List<ConfigComponentModel> rightModels = moduleModel.getRightTopbarList();
            if((rightModels != null) && (!rightModels.isEmpty())) {
                for(const/4 i = 0x0; i < rightModels.size(); i = i + 0x1) {
                    moduleModel = (ConfigComponentModel)rightModels.get(i);
                    TopBtnModel topBtnModel = new TopBtnModel();
                    topBtnModel.tag = moduleModel;
                    topBtnModel.icon = moduleModel.getIcon();
                    rightList.add(topBtnModel);
                }
            }
            topSettingModel.leftModels = leftList;
            topSettingModel.rightModels = rightList;
            if(("subnav".equals(moduleModel.getType())) && ("subnavTopbar".equals(moduleModel.getStyle()))) {
                topSettingModel.subComponentList = moduleModel.getComponentList();
                topSettingModel.subCurrentPosition = getSubCurrentPosition();
            }
            topSettingModel.subTitleListener = getSubTitleChangeListener();
            super.dealTopBar(topSettingModel);
            registerTopListener(topClickListener);
        }
    }
    
    public boolean isSlideFullScreen() {
        return true;
    }
    
    protected SubTitleChangeListener getSubTitleChangeListener() {
        return null;
    }
    
    protected int getSubCurrentPosition() {
        return 0x0;
    }
}
