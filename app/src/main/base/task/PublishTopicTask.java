/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.mobcent.discuz.base.task;

import com.mobcent.discuz.android.constant.UploadConstant;
import com.mobcent.discuz.android.constant.PostsConstant;
import com.mobcent.discuz.activity.constant.FinalConstant;
import com.mobcent.discuz.android.model.ConfigComponentModel;
import com.mobcent.discuz.module.publish.delegate.PublishRequestCallBack;
import com.mobcent.discuz.android.model.BaseResult;
import com.mobcent.discuz.android.service.PostsService;
import com.mobcent.discuz.base.model.PublishTopicModel;
import android.content.Context;
import com.mobcent.discuz.android.service.impl.PostsServiceImpl;
import java.util.List;
import com.mobcent.discuz.android.model.ClassifiedModel;
import com.mobcent.lowest.base.utils.MCListUtils;
import com.mobcent.discuz.android.model.RulesModle;
import com.mobcent.lowest.base.utils.MCStringUtil;
import com.mobcent.lowest.base.utils.MCResource;
import com.mobcent.lowest.android.ui.utils.MCStringBundleUtil;
import com.mobcent.discuz.android.model.UploadPictureModel;
import java.util.ArrayList;
import com.mobcent.discuz.base.helper.LoginHelper;
import com.mobcent.discuz.android.db.SharedPreferencesDB;
import com.mobcent.lowest.base.utils.MCToastUtils;
import com.mobcent.discuz.android.model.TopicDraftModel;
import com.mobcent.discuz.android.service.impl.DraftServiceImpl;
import com.mobcent.discuz.module.publish.delegate.PublishCallbackDelegate;

public class PublishTopicTask extends BaseTask implements UploadConstant, PostsConstant, FinalConstant {
    private ConfigComponentModel configComponentModel;
    private PublishRequestCallBack<BaseResult> mCallBack;
    protected PostsService postsService;
    private PublishTopicModel publishTopicModel;
    
    public PublishTopicTask(Context context, PublishRequestCallBack<BaseResult> _callback, PublishTopicModel publishTopicModel, ConfigComponentModel configComponentModel) {
        super(context, _callback);
        mCallBack = _callback;
        publishTopicModel = publishTopicModel;
        configComponentModel = configComponentModel;
        postsService = new PostsServiceImpl(context);
    }
    
    protected void onPreExecute() {
        boolean checkError = 0x0;
        if((publishTopicModel.boardId <= 0x0) && (publishTopicModel.publishType != 0x4)) {
            checkError = checkError(resource.getString("mc_forum_publish_select_board"));
        } else if(publishTopicModel.publishType == 0x3) {
            if((publishTopicModel.isTitle == 0x1) && (publishTopicModel.title == null) || (publishTopicModel.title.trim().equals(""))) {
                checkError = checkError(resource.getString("mc_forum_publish_min_title_length_error"));
            } else if(!MCStringUtil.isEmpty(publishTopicModel.pollCount)) {
                int pollType = 0x0;
                if(MCStringUtil.isNumeric(publishTopicModel.pollCount)) {
                    pollType = new Integer(publishTopicModel.pollCount).intValue();
                } else {
                    checkError = checkError(resource.getString("mc_forum_select_poll_count"));
                }
                if(pollType > publishTopicModel.pollContent.size()) {
                    checkError = checkError(resource.getString("mc_forum_error_select_poll_count"));
                } else if((!MCStringUtil.isEmpty(publishTopicModel.pollTime)) && (!MCStringUtil.isNumeric(publishTopicModel.pollTime))) {
                    checkError = checkError(resource.getString("mc_forum_poll_overtime"));
                }
            } else if((publishTopicModel.pollContent == null) || (publishTopicModel.pollContent.size() < 0x2)) {
                checkError = checkError(resource.getString("mc_forum_error_poll_content_empty"));
            }
        } else if(publishTopicModel.publishType == 0x2) {
            if((publishTopicModel.isTitle == 0x1) && (MCStringUtil.isEmpty(publishTopicModel.title))) {
                checkError = checkError(resource.getString("mc_forum_publish_min_title_length_error"));
            } else {
                checkError = checkClassfiedList(publishTopicModel.classifiedModelList, publishTopicModel.classifiedModeLoadDatalList);
            } else {
                checkError = checkTitleAndContent();
            }
        }
        if((publishTopicModel.OnlyTopicType == 0x1) && (publishTopicModel.classificationTypeId < 0x1)) {
            checkError = checkError(resource.getString("mc_forum_rapid_classfity"));
        }
        if(checkError) {
            return;
        }
        checkSucc();
    }
    
    private void checkClassfiedList(List<ClassifiedModel> classifiedModelList, List<ClassifiedModel> classifiedModeLoadDatalList) {
        if(!MCListUtils.isEmpty(classifiedModelList)) {
            if(classifiedModelList.size() == classifiedModeLoadDatalList.size()) {
                for(int i = 0x0; i < classifiedModelList.size(); i = i + 0x1) {
                    (ClassifiedModel)classifiedModeLoadDatalList.get(i).setClassifiedName((ClassifiedModel)classifiedModelList.get(i).getClassifiedName().toString());
                    (ClassifiedModel)classifiedModeLoadDatalList.get(i).setClassifiedType((ClassifiedModel)classifiedModelList.get(i).getClassifiedType());
                    if((ClassifiedModel)classifiedModelList.get(i).getClassifiedRules() != null) {
                        (ClassifiedModel)classifiedModeLoadDatalList.get(i).setClassifiedRules((ClassifiedModel)classifiedModelList.get(i).getClassifiedRules());
                    }
                    if(MCStringUtil.isEmpty((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue())) {
                        if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModelList.get(i).getRequired())) {
                            if(Integer.parseInt((ClassifiedModel)classifiedModelList.get(i).getRequired().trim()) == 0x1) {
                                checkError((ClassifiedModel)classifiedModelList.get(i).getClassifiedTitle() + resource.getString("mc_forum_classifiedmodle_not_null"));
                                return 0x1;
                                break;
                            }
                            if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModelList.get(i).getClassifiedName())) {
                                if((ClassifiedModel)classifiedModelList.get(i).getClassifiedName().contains("email")) {
                                    if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue())) {
                                        if(!MCStringUtil.isEmail((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue().toString())) {
                                            checkError(resource.getString("mc_forum_user_email_format_error_warn"));
                                            return 0x1;
                                        }
                                    }
                                }
                            }
                            if((ClassifiedModel)classifiedModelList.get(i).getClassifiedRules() != null) {
                                if((ClassifiedModel)classifiedModelList.get(i).getClassifiedRules().getTypeNum() == 0x1) {
                                    if(!MCStringUtil.isNumeric((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue())) {
                                        checkError((ClassifiedModel)classifiedModelList.get(i).getClassifiedTitle() + resource.getString("mc_forum_classifiedmodle_must_be_num"));
                                        return 0x1;
                                    }
                                }
                                if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMaxnum())) {
                                    float maxNum = Float.valueOf((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMaxnum().trim()).floatValue();
                                    if(Float.valueOf((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue().trim()).floatValue() > maxNum) {
                                        if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMinnum())) {
                                            float minNum = Float.valueOf((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMinnum().trim()).floatValue();
                                            String[] args = {(ClassifiedModel)classifiedModelList.get(i).getClassifiedTitle(),
                                            minNum + "",
                                            maxNum + ""};
                                            checkError(MCStringBundleUtil.resolveString(resource.getStringId("mc_forum_classifiedmodle_salary_controll"), args, context.getApplicationContext()));
                                            return 0x1;
                                        }
                                        String[] args = {(ClassifiedModel)classifiedModelList.get(i).getClassifiedTitle(),
                                        maxNum + ""};
                                        checkError(MCStringBundleUtil.resolveString(resource.getStringId("mc_forum_classifiedmodle_salary_controll_down"), args, context.getApplicationContext()));
                                        return 0x1;
                                    }
                                    if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMinnum())) {
                                        minNum = Float.valueOf((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMinnum().trim()).floatValue();
                                        if(Float.valueOf((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue().trim()).floatValue() < minNum) {
                                            String[] args = {(ClassifiedModel)classifiedModelList.get(i).getClassifiedTitle(),
                                            minNum + "",
                                            maxNum + ""};
                                            checkError(MCStringBundleUtil.resolveString(resource.getStringId("mc_forum_classifiedmodle_salary_controll"), args, context.getApplicationContext()));
                                            return 0x1;
                                        }
                                    }
                                }
                                if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMinnum().trim())) {
                                    minNum = Float.valueOf((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMinnum().trim()).floatValue();
                                    if(Float.valueOf((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue().trim()).floatValue() < minNum) {
                                        String[] args = {(ClassifiedModel)classifiedModelList.get(i).getClassifiedTitle(),
                                        minNum + ""};
                                        checkError(MCStringBundleUtil.resolveString(resource.getStringId("mc_forum_classifiedmodle_salary_controll_up"), args, context.getApplicationContext()));
                                        return 0x1;
                                    }
                                }
                                if(!MCStringUtil.isEmpty((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMaxlength())) {
                                    int maxLength = Integer.parseInt((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedRules().getMaxlength());
                                    if(((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue().length() >= 0) || ((ClassifiedModel)classifiedModeLoadDatalList.get(i).getClassifiedValue().length() <= maxLength)) {
                                        continue;
                                    }
                                    String[] args = {(ClassifiedModel)classifiedModelList.get(i).getClassifiedTitle()};
                                    checkError(MCStringBundleUtil.resolveString(resource.getStringId("mc_forum_classifiedmodle_controll"), args, context.getApplicationContext()));
                                }
                            }
                        }
                    }
                }
            }
        }
        return 0x1;
    }
    
    private void checkSucc() {
        BaseResult baseResult = new BaseResult();
        baseResult.setRs(0x1);
        if(publishTopicModel.publishType == 0x2) {
            baseResult.setClassification(true);
        }
        mCallBack.checkSucc(baseResult);
    }
    
    private boolean checkError(String errorInfo) {
        BaseResult baseResult = new BaseResult();
        baseResult.setRs(0x0);
        baseResult.setErrorInfo(errorInfo);
        onCancelled(baseResult);
        cancel(true);
        return true;
    }
    
    public boolean checkTitleAndContent() {
        if((configComponentModel != null) && (!configComponentModel.isShowTopicTitle()) || (!publishTopicModel.isTitle)) {
            if((!MCStringUtil.isEmpty(publishTopicModel.content)) && (publishTopicModel.content.length() > 0x14)) {
                publishTopicModel.title = publishTopicModel.content.substring(0x0, 0x14);
            } else {
                publishTopicModel.title = publishTopicModel.content;
            }
            if(MCStringUtil.isEmpty(publishTopicModel.title)) {
                publishTopicModel.title = resource.getString("mc_forum_no_title") + publishTopicModel.boardName;
            }
            return false;
        }
        if((MCStringUtil.isEmpty(publishTopicModel.title)) && (publishTopicModel.publishType != 0x4)) {
            checkError(resource.getString("mc_forum_publish_min_title_length_error"));
            return true;
        }
        if((MCStringUtil.isEmpty(publishTopicModel.content)) && (MCStringUtil.isEmpty(publishTopicModel.audioPath)) && (publishTopicModel.picPath.length <= 0)) {
            checkError(resource.getString("mc_forum_publish_min_length_error"));
            return true;
        }
        if((MCStringUtil.isEmpty(publishTopicModel.content)) && (MCStringUtil.isEmpty(publishTopicModel.audioPath)) && (publishTopicModel.picPath.length <= 0)) {
            checkError(resource.getString("mc_forum_publish_min_length_error"));
            return true;
        }
        return false;
        return false;
    }
    
    protected BaseResult doInBackground(Void[] params) {
        // :( Parsing error. Please contact me.
    }
    
    public void setErrorResult(BaseResult result, String errorMsg) {
        if(result != null) {
            result.setRs(0x0);
            result.setAlert(0x1);
            result.setErrorInfo(errorMsg);
        }
    }
    
    protected void onPostExecute(BaseResult result) {
        super.onPostExecute(result);
        LoginHelper.checkToken(context, result);
        if(result != null) {
            if(result.getRs() == 0x1) {
                SharedPreferencesDB.getInstance(context).setRefresh(true);
                if(result.getAlert() == 0) {
                    MCToastUtils.toastByResName(context, "mc_forum_publish_succ", 0x0);
                }
                if((publishTopicModel.publishType != 0x1) && (publishTopicModel.publishType == 0x4)
                 || publishTopicModel.draftModel != null) {
                    new DraftServiceImpl(context).deleteDraftModel(publishTopicModel.draftModel);
                }
            } else if((publishTopicModel.publishType == 0x2) && (publishTopicModel.publishType != 0x3)
             || publishTopicModel.draftModel != null) {
                new DraftServiceImpl(context).saveDraftModel(publishTopicModel.draftModel);
                MCToastUtils.toastByResName(context, "mc_forum_write_drafts");
            } else {
                MCToastUtils.toastByResName(context, "mc_forum_error_publish_unknow_error");
            }
            if(PublishCallbackDelegate.getInstance().getPublishCallbackLisenter() != null) {
                PublishCallbackDelegate.getInstance().getPublishCallbackLisenter().publishCallback(result.getRs());
            }
        }
    }
    
    protected void onCancelled(BaseResult result) {
        super.onCancelled(result);
        if(mCallBack != null) {
            mCallBack.onCancled(result);
        }
    }
    
    private String getAid(List<UploadPictureModel> picServerModels) {
        if(!MCListUtils.isEmpty(picServerModels)) {
            for(int i = 0x0; i < picServerModels.size(); i = i + 0x1) {
                if(aid.equals("")) {
                    aid = (UploadPictureModel)picServerModels.get(i).getAid() + "";
                    continue;
                }
                aid = aid + "," + (UploadPictureModel)picServerModels.get(i).getAid();
            }
        }
        return aid;
    }
    
    private boolean isCheckPass(PublishTopicModel publishTopicModel) {
        if(publishTopicModel == null) {
            return false;
        }
        if(publishTopicModel.boardId <= 0x0) {
        }
        return false;
    }
}
