/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.mobcent.discuz.base.dispatch;

import com.mobcent.discuz.android.constant.ConfigConstant;
import com.mobcent.discuz.android.constant.StyleConstant;
import android.os.Bundle;
import com.mobcent.discuz.android.model.ConfigComponentModel;
import android.support.v4.app.Fragment;
import com.mobcent.lowest.android.ui.module.plaza.activity.model.IntentPlazaNewModel;
import java.util.List;
import com.mobcent.lowest.base.utils.MCListUtils;
import com.mobcent.lowest.module.plaza.model.PlazaAppModel;
import java.util.ArrayList;
import com.mobcent.discuz.application.DiscuzApplication;
import com.mobcent.discuz.android.model.SettingModel;
import java.io.Serializable;
import com.mobcent.discuz.base.fragment.ErrorFragment;
import com.mobcent.discuz.android.model.ConfigModuleModel;
import com.mobcent.discuz.module.person.activity.fragment.UserHomeSelfFragment1;
import com.mobcent.discuz.android.model.BaseResultModel;
import com.mobcent.discuz.android.model.ConfigModel;
import com.mobcent.discuz.module.topic.list.fragment.PortalPhotoListFrament;
import com.mobcent.discuz.module.topic.list.fragment.PortalListFrament;
import com.mobcent.discuz.module.board.fragment.BoardListFragment1;
import com.mobcent.discuz.module.board.fragment.BoardListFragment3;
import com.mobcent.discuz.module.board.fragment.BoardListFragment2;
import com.mobcent.discuz.module.topic.list.fragment.TopicListFragment;
import com.mobcent.discuz.module.msg.helper.GotyeMsgHelper;
import com.mobcent.discuz.module.msg.fragment.SessionList1FragmentNew;
import com.mobcent.discuz.module.msg.fragment.SessionList1Fragment;
import com.mobcent.discuz.module.person.activity.fragment.UserList1Fragment;
import com.mobcent.discuz.base.helper.DZWebWhiteListHelper;
import com.mobcent.discuz.base.fragment.WebViewFragment;
import com.mobcent.discuz.module.plaza.fragment.PlazaFragmentComponent;
import com.mobcent.discuz.base.fragment.FullPageFragment;
import com.mobcent.discuz.base.fragment.SubPageFragment;
import com.mobcent.discuz.base.fragment.CustomPageFragment;
import com.mobcent.discuz.base.fragment.ImgTextPageFragment;

public class FragmentDispatchHelper implements ConfigConstant, StyleConstant {
    
    public static Fragment disPatchFragment(ConfigModuleModel dataModel) {
        String type = getType();
        Bundle bundle = new Bundle();
        bundle.putSerializable("moduleModel", dataModel);
        Fragment c = 0x0;
        if("full".equals(type)) {
            FullPageFragment c = new FullPageFragment();
        } else if("subnav".equals(type)) {
            SubPageFragment c = new SubPageFragment();
        } else if("custom".equals(type)) {
            CustomPageFragment c = new CustomPageFragment();
        } else if("news".equals(type)) {
            ImgTextPageFragment c = new ImgTextPageFragment();
        } else {
            ErrorFragment c = new ErrorFragment();
        }
        c.setArguments(bundle);
        return c;
    }
    
    public static Fragment disPatchFragment(ConfigComponentModel dataModel) {
        // :( Parsing error. Please contact me.
    }
    
    private static void dealPlazaBundle(Bundle bundle, ConfigComponentModel componentModel, Fragment fragment) {
        IntentPlazaNewModel intentModel = new IntentPlazaNewModel();
        if(!MCListUtils.isEmpty(componentModel.getComponentList())) {
            int count = componentModel.getComponentList().size();
            for(int i = 0x0; i < count; i = i + 0x1) {
                ConfigComponentModel layoutModel = (ConfigComponentModel)componentModel.getComponentList().get(i);
                String style = layoutModel.getStyle();
                List<ConfigComponentModel> childList = layoutModel.getComponentList();
                int[] dbIds = 0x0;
                List<PlazaAppModel> plazaAppList = 0x0;
                if(!MCListUtils.isEmpty(childList)) {
                    int childSize = childList.size();
                    if(style.equals("discoverDefault")) {
                        dbIds = new int[childSize];
                    } else {
                        ArrayList plazaAppList = new ArrayList();
                    }
                    for(int j = 0x0; j < childSize; j = j + 0x1) {
                        ConfigComponentModel child = (ConfigComponentModel)childList.get(j);
                        if(style.equals("discoverDefault")) {
                            String type = child.getType();
                            if(type.equals("userinfo")) {
                                dbIds[j] = -0x1;
                            } else if(type.equals("setting")) {
                                dbIds[j] = -0x5;
                            } else if(type.equals("userlist")) {
                                if("recommend".equals(child.getFilter())) {
                                    dbIds[j] = -0x4;
                                    continue;
                                }
                                dbIds[j] = -0x3;
                            } else if(type.equals("surroudingPostlist")) {
                                dbIds[j] = -0x2;
                                continue;
                            }
                            PlazaAppModel appModel = new PlazaAppModel();
                            if("discoverSlider".equals(style)) {
                                appModel.setModelName(child.getDesc());
                            } else {
                                appModel.setModelName(child.getTitle());
                            }
                            appModel.setModelAction(0x5);
                            appModel.setModelDrawable(child.getIcon());
                            appModel.setData(child);
                            plazaAppList.add(appModel);
                        }
                    }
                    if((dbIds != null) && (dbIds.length > 0)) {
                        if((DiscuzApplication._instance.getSettingModel() != null) && (DiscuzApplication._instance.getSettingModel().isInviteActivity())) {
                            intentModel.setDbIds(getIds(dbIds));
                        } else {
                            intentModel.setDbIds(dbIds);
                        }
                    }
                    if(!MCListUtils.isEmpty(plazaAppList)) {
                        if(style.equals("discoverSlider")) {
                            intentModel.setSwitchAppList(plazaAppList);
                        } else if(style.equals("discoverCustom")) {
                            intentModel.setNativeAppList(plazaAppList);
                        }
                    }
                }
            }
        }
        putSerializable("intentPlazaModel", intentModel);
    }
    
    private static int[] getIds(int[] dbIds) {
        int[] ids = new int[(dbIds.length + 0x1)];
        for(int i = 0x0; i < dbIds.length; i = i + 0x1) {
            ids[i] = dbIds[i];
        }
        ids[(ids.length - 0x1)] = -0x6;
        return ids;
    }
}
