/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.mobcent.discuz.base.widget;

import com.mobcent.discuz.activity.view.MCWheelView;
import android.view.View;
import android.app.Dialog;
import android.content.Context;
import android.widget.Button;
import com.mobcent.lowest.base.utils.MCResource;
import com.mobcent.discuz.base.adapter.WheelAdapter;
import java.util.ArrayList;
import java.util.List;
import java.text.SimpleDateFormat;
import java.util.Date;
import com.mobcent.discuz.base.adapter.WheelListAdapter;
import android.view.animation.AnticipateOvershootInterpolator;
import android.view.animation.Interpolator;
import android.os.Bundle;

public class WheelDialog extends Dialog {
    private boolean addYear;
    private Context context;
    private WheelDialog.WheelDelegate delegate;
    private View mainView;
    private Button negativeButton;
    private Button positiveButton;
    private MCResource resource;
    private int yearNum;
    private boolean wheelScrolled = false;
    
    public boolean isAddYear() {
        return addYear;
    }
    
    public void setAddYear(boolean addYear) {
        addYear = addYear;
    }
    
    public int getYearNum() {
        return yearNum;
    }
    
    public void setYearNum(int yearNum) {
        yearNum = yearNum;
    }
    
    public WheelDialog(Context context) {
        super(context);
        context = context;
    }
    
    public WheelDialog(Context context, View mainView, WheelDialog.WheelDelegate delegate) {
        super(context);
        context = context;
        mainView = mainView;
        delegate = delegate;
    }
    
    public WheelDialog(Context context, int theme, View mainView) {
        super(context, theme);
        context = context;
        mainView = mainView;
    }
    
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        resource = MCResource.getInstance(context);
        requestWindowFeature(0x1);
        setContentView(resource.getLayoutId("wheel_dialog_layout"));
        initWheel(resource.getViewId("mc_forum_wheel1"));
        initWheel(resource.getViewId("mc_forum_wheel2"));
        initWheel(resource.getViewId("mc_forum_wheel3"));
        positiveButton = (Button)findViewById(resource.getViewId("positiveButton"));
        negativeButton = (Button)findViewById(resource.getViewId("negativeButton"));
        positiveButton.setOnClickListener(new View.OnClickListener(this) {
            
            public void onClick(View v) {
                if(delegate != null) {
                    delegate.positiveClickListener(mainView);
                }
                dismiss();
            }
        });
        negativeButton.setOnClickListener(new View.OnClickListener(this) {
            
            public void onClick(View v) {
                mainView.setTag("");
                if(delegate != null) {
                    delegate.negativeClickListener(mainView);
                }
                dismiss();
            }
        });
    }
    
    private void initWheel(int id) {
        MCWheelView wheel = getWheel(id);
        if(id == resource.getViewId("mc_forum_wheel1")) {
            ArrayList<String> list = new ArrayList<String>();
            int year = Integer.parseInt(new SimpleDateFormat("yyyy").format(new Date()));
            if(addYear) {
                for(int i = 0x7b2; i <= (getYearNum() + year); i = i + 0x1) {
                    list.add(i + resource.getString("mc_forum_anno_time_year"));
                }
                for(int i = 0x7b2; i <= (getYearNum() + year); i = i + 0x1) {
                    list.add(i + resource.getString("mc_forum_anno_time_year"));
                }
            }
            wheel.setAdapter(new WheelListAdapter(list));
            wheel.setCurrentItem((year - 0x7b2));
        } else if(id == resource.getViewId("mc_forum_wheel2")) {
            ArrayList list = new ArrayList();
            for(int i = 0x1; i <= 0xc; i = i + 0x1) {
                list.add(i + resource.getString("mc_forum_anno_time_month"));
            }
            wheel.setAdapter(new WheelListAdapter(list));
            int month = Integer.parseInt(new SimpleDateFormat("MM").format(new Date()));
            wheel.setCurrentItem((month - 0x1));
        } else if(id == resource.getViewId("mc_forum_wheel3")) {
            ArrayList list = new ArrayList();
            for(int i = 0x1; i <= 0x1f; i = i + 0x1) {
                list.add(i + resource.getString("mc_forum_anno_time_day"));
            }
            wheel.setAdapter(new WheelListAdapter(list));
            int day = Integer.parseInt(new SimpleDateFormat("dd").format(new Date()));
            wheel.setCurrentItem((day - 0x1));
        }
        wheel.addChangingListener(changedListener);
        wheel.addScrollingListener(scrolledListener);
        wheel.setCyclic(true);
        wheel.setInterpolator(new AnticipateOvershootInterpolator());
    }
    
    private MCWheelView getWheel(int id) {
        return (MCWheelView)findViewById(id);
    }
    MCWheelView.OnWheelScrollListener scrolledListener = new MCWheelView.OnWheelScrollListener(this) {
        
        public void onScrollingStarted(MCWheelView wheel) {
            wheelScrolled = true;
        }
        
        public void onScrollingFinished(MCWheelView wheel) {
            wheelScrolled = false;
        }
    };
    private WheelDialog.OnWheelChangedListener changedListener = new WheelDialog.OnWheelChangedListener(this) {
        
        public void onChanged(MCWheelView wheel, int oldValue, int newValue) {
            if(!wheelScrolled) {
            }
        }
    };
    
    private void updateStatus() {
        mainView.setTag(getAllCode());
    }
    
    private String getAllCode() {
        return sb.append(getCurrentItemContent(getWheel(resource.getViewId("mc_forum_wheel1")))).append(getCurrentItemContent(getWheel(resource.getViewId("mc_forum_wheel2")))).append(getCurrentItemContent(getWheel(resource.getViewId("mc_forum_wheel3")))).toString();
    }
    
    private String getCurrentItemContent(MCWheelView wheelView) {
        return formatDate(wheelView.getAdapter().getItem(wheelView.getCurrentItem()) + "");
    }
    
    private String formatDate(String date) {
        if(date.indexOf(resource.getString("mc_forum_anno_time_year")) > -0x1) {
            return date;
        }
        if(date.indexOf(resource.getString("mc_forum_anno_time_month")) > -0x1) {
            return date;
        }
        if(date.indexOf(resource.getString("mc_forum_anno_time_day")) > -0x1) {
            return date;
        }
        return date;
    }
    
    public void show() {
        super.show();
        if(mainView == null) {
            return;
        }
        mainView.setSelected(true);
    }
    
    public void dismiss() {
        super.dismiss();
        if(mainView == null) {
            return;
        }
        mainView.setSelected(false);
    }
}
