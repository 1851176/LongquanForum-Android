/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.mobcent.discuz.base.widget;

import android.view.View;
import android.widget.EditText;
import android.content.Context;
import android.widget.ImageView;
import android.view.LayoutInflater;
import android.widget.TextView;
import com.mobcent.lowest.base.utils.MCResource;
import android.app.Activity;
import android.view.ViewGroup;
import android.text.TextWatcher;
import android.text.Editable;

public class MCPollEditBar {
    private EditText contentEdit;
    private Context context;
    private ImageView deleImg;
    private LayoutInflater layoutInflater;
    private int num;
    private TextView numText;
    private MCPollEditBar.PollEditBarDelegate pollEditBarDelegate;
    private MCResource resource;
    private View view;
    
    public MCPollEditBar(Activity activity, int num, MCPollEditBar.PollEditBarDelegate delegate) {
        layoutInflater = activity.getLayoutInflater();
        resource = MCResource.getInstance(activity);
        pollEditBarDelegate = delegate;
        num = num;
        context = activity;
        initVoteBar();
        initVoteBarActions();
        updateVoteBar();
    }
    
    public MCPollEditBar(Activity activity, int num, String s, MCPollEditBar.PollEditBarDelegate delete) {
        this(activity, num, delete);
        contentEdit.setText(s);
    }
    
    private void updateVoteBar() {
        numText.setText(num + "");
    }
    
    private void initVoteBar() {
        view = layoutInflater.inflate(resource.getLayoutId("widget_poll_edit_item"), 0x0);
        numText = (TextView)view.findViewById(resource.getViewId("mc_forum_publish_vote_num_text"));
        contentEdit = (EditText)view.findViewById(resource.getViewId("mc_forum_publish_vote_conent_edit"));
        deleImg = (ImageView)view.findViewById(resource.getViewId("mc_forum_publish_vote_delete_img"));
    }
    
    private void initVoteBarActions() {
        deleImg.setOnClickListener(new View.OnClickListener(this) {
            
            public void onClick(View v) {
                if(getEditContent().length() > 0) {
                    AlertDialog.Builder exitAlertDialog = new AlertDialog.Builder(context).setTitle(resource.getStringId("mc_forum_dialog_tip")).setMessage(resource.getStringId("mc_forum_warn_poll_delete"));
                    exitAlertDialog.setNegativeButton(resource.getStringId("mc_forum_dialog_cancel"), 0x0);
                    exitAlertDialog.setPositiveButton(resource.getStringId("mc_forum_dialog_confirm"), new DialogInterface.OnClickListener(this) {
                        
                        public void onClick(DialogInterface dialog, int which) {
                            pollEditBarDelegate.deletePollBar(view, this$0);
                        }
                    });
                    exitAlertDialog.show();
                    return;
                }
                pollEditBarDelegate.deletePollBar(view, this$0);
            }
        });
        contentEdit.setOnTouchListener(new View.OnTouchListener(this) {
            
            public boolean onTouch(View v, MotionEvent event) {
                pollEditBarDelegate.onEditClick(v);
                return false;
            }
        });
        contentEdit.addTextChangedListener(new TextWatcher(this) {
            
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if(!contentEdit.getText().toString().equals("")) {
                    contentEdit.setBackgroundColor(0x0);
                    return;
                }
                contentEdit.setBackgroundResource(resource.getDrawableId("mc_forum_input_box"));
            }
            
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
            }
            
            public void afterTextChanged(Editable s) {
            }
        });
    }
    
    public View getView() {
        return view;
    }
    
    public String getEditContent() {
        return contentEdit.getText().toString();
    }
    
    public TextView getNum() {
        return numText;
    }
    
    public void hideDeleteBtn() {
        deleImg.setVisibility(0x4);
    }
    
    public void showDeleteBtn() {
        deleImg.setVisibility(0x0);
    }
}
